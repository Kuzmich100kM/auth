// Form for input, textarea, select, checkbox
// Adding class in Components object initModels: rightLabel, leftLabel. Example: const initModels = [{	className: "rightLabel",...}])
form {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: flex-start;
    z-index: 100;
    width: 100%;

    .form-group {
        display: flex;
        flex-basis: 100%;
        position: relative;
        align-items: center;
        margin-bottom: 3px;

        &.divider {
            background-color: color($gray, -10);
            margin-top: 10px;
            padding: 3px 15px;
        }

        &.disabled {
            opacity: 0.6;
            pointer-events: none;
        }

        &.input-center input {
            text-align: center;
        }
    }

    input,
    textarea,
    select {
        height: 28px;
        width: 100%;
        padding: 0 1rem;
        color: $dark;
        border: 1px solid color($light, 10);
        line-height: $fzBaseHtml;
        outline: none;
        text-align: right;

        &:focus,
        &:hover {
            border: 1px solid color($blue, -30);
            outline-offset: 0;
        }
    }

    textarea {
        min-height: 52px;
        height: auto;
        padding-top: 7px;
        text-align: left;

        &~label {
            align-self: flex-start;
            position: inherit;
        }
    }

    label {
        position: absolute;
        padding: 0.5em 1rem;
        left: 0;
        transform: translateX(0);
        transition: 0.2s ease all;
        white-space: nowrap;
        pointer-events: none;
        color: $gray;
    }

    input {

        &[type="checkbox"],
        &[type="radio"] {
            height: 15px;
            width: 15px;
            margin: 0.5em 0 0.5em 1rem;
        }

        &[type="checkbox"]+label {
            margin-left: 20px;
        }

        &[type="radio"]+label {
            padding: 0.5em 5px;
            position: relative;
            color: $black;
        }
    }

    .radio {
        display: flex;
    }

    .error {
        width: 100%;
        position: absolute;
        right: -102%;
        text-align: left;
        color: color($danger, 20);
        line-height: 11px;
        font-size: inherit;
        background-color: $white;
        z-index: 100;

        &:not(:empty)~input,
        &:not(:empty)~textarea {
            box-shadow: none;
            color: color($danger, 20);
            background-color: color($danger, -36);
            border: 1px solid color($danger, -25);
            offset: none;
        }

        &:not(:empty)~label,
        &:not(:empty)~textarea::placeholder {
            color: color($dark);
        }
    }

    .first-column {
        flex-basis: calc(60% - 2px);
        margin-right: 4px;
    }

    .second-column {
        flex-basis: calc(40% - 2px);
    }

    &.column-49 {
        flex-basis: 49%;
    }

    .column-3-1 {
        flex-basis: calc(34% - 2px);
        //flex-basis: 33% ;

    }

    .column-3-2 {
        flex-basis: calc(33% - 4px);
        margin: 0 4px;
    }

    .column-3-3 {
        flex-basis: calc(33% - 2px);
    }

    .column-4-1 {
        flex-basis: calc(40% - 2px);
        margin-right: 4px;
        //flex-basis: 33% ;

    }

    .column-4-2 {
        flex-basis: calc(25% - 4px);
        margin-right: 4px;
    }

    .column-4-3 {
        flex-basis: calc(8% - 4px);
        margin-right: 4px;
    }

    .column-4-4 {
        flex-basis: calc(27% - 2px);
    }


    // For Input 22px height need add class, ag: <FormPanel cls="small"/>
    &.small {
        input {
            height: 22px;
        }
    }
}

// 2 стиль оформления формы (rightLabel)
form .form-group.rightLabel input {
    text-align: left;

    &:focus~label,
    &:not(:placeholder-shown)~label {
        left: 100%;
        transform: translateX(-100%);
        font-size: inherit;
        opacity: 0.7;
    }

    .error {
        left: -102%;
        text-align: right;
    }
}

// 3 стиль оформления формы (leftLabel)
form .form-group.leftLabel {
    label {
        position: relative;
        order: -1;
    }
}

.wrap-form {
    width: 100%;
    min-height: 300px;
}

.wrap-btn {
    width: 100%;
    display: flex;
}

// form button {
// 	margin: 15px 0 15px;
// 	padding: 5px 15px;
// 	border-radius: 2px;
// 	border: none;
// 	outline: none;
// 	text-align: center;
// 	text-decoration: none;
// 	display: inline-block;
// 	cursor: pointer;
// 	box-shadow: #a7a7a7 1px 1px 3px;

// 	&:hover {
// 		box-shadow: none;
// 	}

// 	&:first-of-type {
// 		margin-left: auto;
// 		margin-right: 15px;
// 	}

// 	&.submit {
// 		background-color: #4c7aa5;
// 		color: white;
// 		border: 1px solid #457098;
// 		flex-grow: 2;

// 		&:hover {
// 			background-color: #406c94;
// 			border: 1px solid #365e83;
// 		}

// 		&:focus,
// 		&:active,
// 		&:target {
// 			background-color: #406c94;
// 			border: 1px solid #365e83;
// 		}
// 	}

// 	&.cancel {
// 		background-color: #cccccc;
// 		color: #3e3e3e;
// 		border: 1px solid #c5c5c5;
// 	}
// }